import streamlit as st
import sys
import time
import datetime
import requests

BASE_URL = "http://127.0.0.1:8000/"

def stream(text):
    for words in text.split():
        yield words + " "
        time.sleep(0.05)


st.set_page_config(
    page_title=" Travel Planner AI",
    page_icon="🌍",
    layout="centered",
    initial_sidebar_state="expanded",
)

st.title("🌍 Travel Planner Agentic Application")

# Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Display chat messages from history on app rerun
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])
        
prompt  = st.chat_input("What plans do you have in mind?")

# React to user input
if prompt:
    # Display user message in chat message container
    st.chat_message("user").markdown(prompt)
    # Add user message to chat history
    st.session_state.messages.append({"role": "user", "content": prompt})

    # Call the agentic workflow API
    try:
        print('start')
        response = requests.post(f"{BASE_URL}/query", json={"questions": prompt})
        print("send")
        if response.status_code == 200:
            data = response.json().get('response', 'No answer found.')
            markdown_content = f"""🌍 AI Travel Plan

            **Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}  
            **Created by:** Dip's Travel Agent

            ---

            {data}

            ---

            *This travel plan was generated by AI. Please verify all information, especially prices, operating hours, and travel requirements before your trip.*
            """
            # Display assistant response in chat message container
            with st.chat_message("assistant"):
                st.write_stream(stream(markdown_content))
            # Add assistant response to chat history
            st.session_state.messages.append({"role": "assistant", "content": response})
    except Exception as e:
        raise Exception(f"Error calling the agentic workflow API: {e}")
            
            
    
    